<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Blood Requesters</title>

</head>
<style>
body {
  font-family: Arial, sans-serif;
  background-color: #f3f4f6;
  margin: 0;
  padding: 20px;
}

h1 {
  text-align: center;
  margin-bottom: 30px;
  color: #333;
}

.container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
}

.card {
  background-color: #fff;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  width: 300px;
  transition: 0.3s;
}

.card:hover {
  transform: scale(1.02);
}

.card h2 {
  margin: 0 0 10px;
  color: #2c3e50;
}

.card p {
  margin: 5px 0;
  color: #555;
}

.btn-group {
  margin-top: 15px;
  display: flex;
  justify-content: space-between;
}

.accept-btn, .reject-btn {
  padding: 10px 16px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
  color: white;
}

.accept-btn {
  background-color: #4caf50;
}

.reject-btn {
  background-color: #f44336;
}

</style>

<body>
  <h1>Blood Requesters</h1>
  <div id="requester-list" class="card-container">
    <!-- Requester cards will be inserted here -->
  </div>

  <script>
    // Example static data (replace with fetch() in real app)
const requesters = JSON.parse('<%- JSON.stringify(requester) %>');

const container = document.getElementById("requester-list");

requesters.forEach(req => {
  const card = document.createElement("div");
  card.className = "card";

  card.innerHTML = `
    <h2>${req.name}</h2>
    <p><strong>Email:</strong> ${req.email}</p>
    <p><strong>Contact:</strong> ${req.contact}</p>
    
    <div class="btn-group">
      <button class="accept-btn" onclick="handleAccept('${req._id}')">Accept</button>
      <button class="reject-btn" onclick="handleReject('${req._id}')">Reject</button>
    </div>
  `;

  container.appendChild(card);
});

function handleAccept(id) {
  fetch(`/api/requests/${id}/accept`, {
    method: 'POST',
  })
    .then(res => res.json())
    .then(data => {
      alert(`✅ ${data.message}`);
      location.reload();
    })
    .catch(err => {
      console.error("Error accepting request:", err);
      alert("Error accepting request.");
    });
}

function handleReject(id) {
  fetch(`/api/requests/${id}/reject`, {
    method: 'POST',
  })
    .then(res => res.json())
    .then(data => {
      alert(`❌ ${data.message}`);
      location.reload();
    })
    .catch(err => {
      console.error("Error rejecting request:", err);
      alert("Error rejecting request.");
    });
}
  </script>
</body>
</html>

